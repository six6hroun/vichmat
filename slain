import numpy as np
import matplotlib.pyplot as plt

# Определение функции f(x)
def f(x):
  return np.sin(np.pi * x)

# Определение кубического сплайна
def cubic_spline(x, x_data, y_data):
  """
  Функция для построения кубического сплайна.

  Args:
      x: Массив точек, для которых нужно вычислить сплайн.
      x_data: Массив точек, задающих узлы интерполяции.
      y_data: Массив значений функции в узлах интерполяции.

  Returns:
      Массив значений сплайна в точках x.
  """
  n = len(x_data) - 1  # Количество интервалов
  h = np.diff(x_data)  # Шаг сетки

  # Вычисление коэффициентов сплайна
  a = y_data
  b = np.zeros(n)
  c = np.zeros(n)
  d = np.zeros(n)

  # Вычисление коэффициентов b и c
  for i in range(n - 1):
    b[i] = (y_data[i + 1] - y_data[i]) / h[i] - h[i] * (c[i + 1] + 2 * c[i]) / 3
  b[n - 1] = (y_data[n] - y_data[n - 1]) / h[n - 1] - h[n - 1] * (2 * c[n - 1] + c[n - 2]) / 3

  # Решение системы линейных уравнений для c
  c[1:n - 1] = (3 * (b[2:n] - b[1:n - 1]) / h[1:n - 1] - 3 * (b[1:n - 1] - b[0:n - 2]) / h[0:n - 2]) / (2 * h[1:n - 1] + 2 * h[0:n - 2])

  # Вычисление коэффициентов d
  for i in range(n):
    d[i] = (c[i + 1] - c[i]) / (3 * h[i])

  # Вычисление значений сплайна
  y_spline = np.zeros_like(x)
  for i in range(n):
    idx = np.where((x >= x_data[i]) & (x < x_data[i + 1]))
    y_spline[idx] = a[i] + b[i] * (x[idx] - x_data[i]) + c[i] * (x[idx] - x_data[i]) Ⓑ 2 + d[i] * (x[idx] - x_data[i]) Ⓑ 3

  return y_spline

# Задание отрезка и количества узлов
interval = [-1, 1]
n_values = [4, 8, 16]

# Построение графиков
fig, axes = plt.subplots(1, len(n_values), figsize=(15, 5))

# График исходной функции
x_plot = np.linspace(interval[0], interval[1], 100)
y_plot = f(x_plot)
for i, n in enumerate(n_values):
  # Создание массива узлов интерполяции
  x_data = np.linspace(interval[0], interval[1], n + 1)
  y_data = f(x_data)

  # Вычисление значений сплайна
  y_spline = cubic_spline(x_plot, x_data, y_data)

  # Построение графика сплайна
  axes[i].plot(x_plot, y_plot, label="f(x)")
  axes[i].plot(x_plot, y_spline, label="Кубический сплайн (n = {})".format(n))

  # Оформление графика
  axes[i].set_xlabel("x")
  axes[i].set_ylabel("y")
  axes[i].set_title("n = {}".format(n))
  axes[i].legend()
  axes[i].grid(True)

plt.tight_layout()
plt.show()
